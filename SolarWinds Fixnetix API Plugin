import requests
import json
import urllib3
from orionsdk import SwisClient
import re
  
urllib3.disable_warnings()
 
class APIPlugin:
    _headers = {"Content-Type": "application/json",
                "Accept": "application/json"}
  
    def __init__(self, user, pwd, url):
        self._user = user
        self._pwd = pwd
        self.auth = (self._user, self._pwd)

        #if re.search('http://(.+)', url):
        #    stripped = re.search('http://(.+)', url)
        #    url = stripped.group(1)
        #url = url.replace('http://','')
        #url = url.replace('https://','')
        user = 'netbrain'
        pwd = 'Netbrain!1'
        url = '10.20.238.72'
        self._swis = SwisClient(url, user, pwd)
 
    # API Plugin Test function definition. The sample test function random retrieves an incident number from ServiceNow to verify the connection.
    def _test(self):
        query = "SELECT NodeID,IPAddress,CPULoad,PercentMemoryUsed,Uri FROM Orion.Nodes WHERE SysName LIKE '%'+@id+'%'"
        deviceName='sw'
        result = str(self._query(query, deviceName))
        return result
 
    #Define a customized RESTful Get function template.         
    def _query(self, query, deviceName):
        #urlParams = {}
        #if 'urlParams' in param:
        #    urlParams=param['urlParams']
        try:
            response = self._swis.query(query,id=deviceName)
            return response
            
        except Exception as e:
            return str(e)

def extract_param(param):
    # The NetBrain initial parameters with customized fields.
    if isinstance(param, str):
        param = json.loads(param)
 
    #username, password, endpoint are build-in keywords in initial param.
    username = ''
    password = ''
    endpoint = ''
    #callParam is customized fields.
    callParam = {}
 
    if 'username' in param:
        username = param['username']
    if 'password' in param:
        password = param['password']
    if 'endpoint' in param:
        endpoint = param['endpoint']
    if 'query' in param:
        query = param['query']
    if 'deviceName' in param:
        deviceName = param['deviceName']    
 
    return (username, password, endpoint, query, deviceName)


# Public function for API parser.
def getData(param):
    #username, password, endpoint, query , deviceName= extract_param(param)
    username = param.get("username")
    password = param.get("password")
    endpoint = param.get("endpoint")
    query = param.get("query")
    deviceName = param.get("deviceName")

    ap = APIPlugin(username, password, endpoint)
    #paramdict={"query":query, "deviceName": deviceName}
    rtn = ap._query(query, deviceName)
    return json.dumps(rtn)


param = {'deviceName': 'device.com', 'endpoint': 'http://10.20.238.72', 'password': '*****', 'query': 'SELECT NodeID,IPAddress,CPULoad,PercentMemoryUsed,Uri FROM Orion.Nodes WHERE SysName LIKE @id', 'username': 'netbrain'}
print(getData(param))
